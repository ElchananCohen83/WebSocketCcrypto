package main

import (
	"encoding/json"
	"fmt"
	"log"

	"github.com/gorilla/websocket"
)

func onMessage(message []byte) {
	var data map[string]interface{}
	err := json.Unmarshal(message, &data)
	if err != nil {
		log.Println("Error decoding JSON:", err)
		return
	}
	fmt.Println(data)
}

func main() {
	socketURL := "wss://stream.binance.com:9443/ws/btcusdt@avgPrice"

	// Create a WebSocket connection
	conn, _, err := websocket.DefaultDialer.Dial(socketURL, nil)
	if err != nil {
		log.Fatal("Error connecting to WebSocket:", err)
	}
	defer conn.Close()

	// Start a goroutine to handle incoming messages
	go func() {
		for {
			_, message, err := conn.ReadMessage()
			if err != nil {
				log.Println("Error reading message:", err)
				return
			}
			onMessage(message)
		}
	}()

	// Block the main goroutine to keep the program running
	select {}
}
